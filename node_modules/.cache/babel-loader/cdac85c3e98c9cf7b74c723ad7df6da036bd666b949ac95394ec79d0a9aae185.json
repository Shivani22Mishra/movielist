{"ast":null,"code":"var _jsxFileName = \"/home/hp/Downloads/movies_app/src/components/movieTab/DisplayMovieViaGenre.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Container, Input, Row, Col, Label } from \"reactstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieViaGenre(props) {\n  _s();\n  const [moviesViaGenres, setMoviesViaGenres] = useState(null);\n  const [apiData, setApiData] = useState(null);\n  const [uniqueGenre, setUniqueGenre] = useState(null);\n  const [currentSelectedValue, setCurrentSelectedValue] = useState(\"Action\");\n  const getMoviesData = async () => {\n    const fetchUrl = `${process.env.REACT_APP_CONTENTFUL_ENDPOINT_URL}`;\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer 7EwYxT-Z1DCReyP5LWk4NXSn4XVPxffV4mWG-wL_mDU`,\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(fetchUrl, fetchOptions).then(response => {\n      return response.json();\n    });\n    if (response) {\n      let tempArr = [];\n      response.items[0].fields.moviesData.map(row => {\n        row.Genre.split(\",\").map(child => {\n          tempArr.push(child);\n        });\n      });\n      setUniqueGenre(Array.from(new Set(tempArr)));\n      setApiData(response.items[0].fields.moviesData);\n    }\n  };\n  useEffect(() => {\n    getMoviesData();\n  }, []);\n  useEffect(() => {\n    if (apiData && currentSelectedValue) {\n      let tempArr = [];\n      apiData.map(data => {\n        if (data.Genre.includes(currentSelectedValue)) {\n          tempArr.push(data);\n        }\n      });\n      setMoviesViaGenres(tempArr);\n    }\n  }, [apiData, currentSelectedValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            flex: \"0.5 1\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"selectGenre\",\n            className: \"d-inline-block\",\n            children: \"Sort based on genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"selectGenre\",\n            name: \"genre\",\n            type: \"select\",\n            className: \"d-inline-block w-50\",\n            style: {\n              marginLeft: \"10px\"\n            },\n            onChange: e => {\n              setCurrentSelectedValue(e.target.value);\n            },\n            children: uniqueGenre && uniqueGenre.map(option => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Awards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Released\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Director\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: moviesViaGenres && moviesViaGenres.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.Awards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.Genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.Released\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.Actors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.Director\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MovieViaGenre, \"cF2y5ASehYziuNBIW4t4Z/y1G0M=\");\n_c = MovieViaGenre;\nvar _c;\n$RefreshReg$(_c, \"MovieViaGenre\");","map":{"version":3,"names":["React","useEffect","useState","Table","Container","Input","Row","Col","Label","MovieViaGenre","props","moviesViaGenres","setMoviesViaGenres","apiData","setApiData","uniqueGenre","setUniqueGenre","currentSelectedValue","setCurrentSelectedValue","getMoviesData","fetchUrl","process","env","REACT_APP_CONTENTFUL_ENDPOINT_URL","fetchOptions","method","headers","Authorization","response","fetch","then","json","tempArr","items","fields","moviesData","map","row","Genre","split","child","push","Array","from","Set","data","includes","flex","marginLeft","e","target","value","option","index","Title","Awards","Released","Actors","Director"],"sources":["/home/hp/Downloads/movies_app/src/components/movieTab/DisplayMovieViaGenre.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Table, Container, Input, Row, Col, Label } from \"reactstrap\";\r\nexport default function MovieViaGenre(props) {\r\n  const [moviesViaGenres, setMoviesViaGenres] = useState(null);\r\n  const [apiData, setApiData] = useState(null);\r\n  const [uniqueGenre, setUniqueGenre] = useState(null);\r\n  const [currentSelectedValue, setCurrentSelectedValue] = useState(\"Action\");\r\n  const getMoviesData = async () => {\r\n    const fetchUrl = `${process.env.REACT_APP_CONTENTFUL_ENDPOINT_URL}`;\r\n    const fetchOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer 7EwYxT-Z1DCReyP5LWk4NXSn4XVPxffV4mWG-wL_mDU`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await fetch(fetchUrl, fetchOptions).then((response) => {\r\n      return response.json();\r\n    });\r\n    if (response) {\r\n      let tempArr = [];\r\n      response.items[0].fields.moviesData.map((row) => {\r\n        row.Genre.split(\",\").map((child) => {\r\n          tempArr.push(child);\r\n        });\r\n      });\r\n      setUniqueGenre(Array.from(new Set(tempArr)));\r\n      setApiData(response.items[0].fields.moviesData);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getMoviesData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (apiData && currentSelectedValue) {\r\n      let tempArr = [];\r\n      apiData.map((data) => {\r\n        if (data.Genre.includes(currentSelectedValue)) {\r\n          tempArr.push(data);\r\n        }\r\n      });\r\n      setMoviesViaGenres(tempArr);\r\n    }\r\n  }, [apiData, currentSelectedValue]);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className=\"mt-3\">\r\n          <Col style={{ flex: \"0.5 1\" }}>\r\n            <Label for=\"selectGenre\" className=\"d-inline-block\">\r\n              Sort based on genre\r\n            </Label>\r\n            <Input\r\n              id=\"selectGenre\"\r\n              name=\"genre\"\r\n              type=\"select\"\r\n              className=\"d-inline-block w-50\"\r\n              style={{ marginLeft: \"10px\" }}\r\n              onChange={(e) => {\r\n                setCurrentSelectedValue(e.target.value);\r\n              }}\r\n            >\r\n              {uniqueGenre &&\r\n                uniqueGenre.map((option) => {\r\n                  return <option>{option}</option>;\r\n                })}\r\n            </Input>\r\n          </Col>\r\n        </Row>\r\n        <Table className=\"mt-5\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Awards</th>\r\n              <th>Genre</th>\r\n              <th>Released</th>\r\n              <th>Actors</th>\r\n              <th>Director</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {moviesViaGenres &&\r\n              moviesViaGenres.map((data, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{data.Title}</td>\r\n                    <td>{data.Awards}</td>\r\n                    <td>{data.Genre}</td>\r\n                    <td>{data.Released}</td>\r\n                    <td>{data.Actors}</td>\r\n                    <td>{data.Director}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}