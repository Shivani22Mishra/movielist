{"ast":null,"code":"var _jsxFileName = \"/home/hp/Downloads/movies_app/src/components/movieTab/UpdateMoviePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateMoviePopup(props) {\n  _s();\n  const {\n    modal,\n    toggle,\n    originalData,\n    setMovieData\n  } = props;\n  const [formData, setFormData] = useState(null);\n  useEffect(() => {\n    if (originalData) {\n      setFormData(originalData);\n    }\n  }, [originalData]);\n  const updateButtonHandle = () => {\n    setMovieData(formData);\n    toast.success(\"Data updated successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Update Movie Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), formData && /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"title\",\n              name: \"title\",\n              value: formData.title,\n              onChange: e => setFormData({\n                ...formData,\n                [e.target.name]: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"simplePlot\",\n              children: \"Plot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"simplePlot\",\n              name: \"simplePlot\",\n              value: formData.simplePlot,\n              onChange: e => setFormData({\n                ...formData,\n                [e.target.name]: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"rating\",\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"rating\",\n              name: \"rating\",\n              value: formData.rating,\n              onChange: e => setFormData({\n                ...formData,\n                [e.target.name]: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"votes\",\n              children: \"Votes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"votes\",\n              name: \"votes\",\n              value: formData.votes,\n              onChange: e => setFormData({\n                ...formData,\n                [e.target.name]: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => {\n            updateButtonHandle();\n            toggle();\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateMoviePopup, \"tGdvJZMvgfHwJ9DyDt8o8ZgjUJs=\");\n_c = UpdateMoviePopup;\nexport default UpdateMoviePopup;\nvar _c;\n$RefreshReg$(_c, \"UpdateMoviePopup\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","toast","UpdateMoviePopup","props","modal","toggle","originalData","setMovieData","formData","setFormData","updateButtonHandle","success","title","e","target","name","value","simplePlot","rating","votes"],"sources":["/home/hp/Downloads/movies_app/src/components/movieTab/UpdateMoviePopup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction UpdateMoviePopup(props) {\r\n  const { modal, toggle, originalData, setMovieData } = props;\r\n  const [formData, setFormData] = useState(null);\r\n  useEffect(() => {\r\n    if (originalData) {\r\n      setFormData(originalData);\r\n    }\r\n  }, [originalData]);\r\n\r\n  const updateButtonHandle = () => {\r\n    setMovieData(formData);\r\n    toast.success(\"Data updated successfully!\")\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} {...props}>\r\n        <ModalHeader toggle={toggle}>Update Movie Details</ModalHeader>\r\n        {formData && (\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"title\">Title</Label>\r\n                <Input\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  value={formData.title}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      [e.target.name]: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"simplePlot\">Plot</Label>\r\n                <Input\r\n                  id=\"simplePlot\"\r\n                  name=\"simplePlot\"\r\n                  value={formData.simplePlot}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      [e.target.name]: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"rating\">Rating</Label>\r\n                <Input\r\n                  id=\"rating\"\r\n                  name=\"rating\"\r\n                  value={formData.rating}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      [e.target.name]: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"votes\">Votes</Label>\r\n                <Input\r\n                  id=\"votes\"\r\n                  name=\"votes\"\r\n                  value={formData.votes}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      [e.target.name]: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        )}\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updateButtonHandle();\r\n              toggle();\r\n            }}\r\n          >\r\n            Update\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateMoviePopup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,MAAM,EACNC,KAAK,EACLC,WAAW,EACXC,SAAS,EACTC,WAAW,EACXC,IAAI,EACJC,SAAS,EACTC,KAAK,EACLC,KAAK,QACA,YAAY;AACnB,SAASC,KAAK,QAAQ,gBAAgB;AAAC;AAEvC,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGJ,KAAK;EAC3D,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC9CC,SAAS,CAAC,MAAM;IACd,IAAIe,YAAY,EAAE;MAChBG,WAAW,CAACH,YAAY,CAAC;IAC3B;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMI,kBAAkB,GAAG,MAAM;IAC/BH,YAAY,CAACC,QAAQ,CAAC;IACtBP,KAAK,CAACU,OAAO,CAAC,4BAA4B,CAAC;EAC7C,CAAC;EACD,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,MAAM,EAAEP,KAAM;MAAC,MAAM,EAAEC,MAAO;MAAA,GAAKF,KAAK;MAAA,wBAC7C,QAAC,WAAW;QAAC,MAAM,EAAEE,MAAO;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAc,EAC9DG,QAAQ,iBACP,QAAC,SAAS;QAAA,uBACR,QAAC,IAAI;UAAA,wBACH,QAAC,SAAS;YAAA,wBACR,QAAC,KAAK;cAAC,GAAG,EAAC,OAAO;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ,eAChC,QAAC,KAAK;cACJ,EAAE,EAAC,OAAO;cACV,IAAI,EAAC,OAAO;cACZ,KAAK,EAAEA,QAAQ,CAACI,KAAM;cACtB,QAAQ,EAAGC,CAAC,IACVJ,WAAW,CAAC;gBACV,GAAGD,QAAQ;gBACX,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;cAC5B,CAAC;YACF;cAAA;cAAA;cAAA;YAAA,QACD;UAAA;YAAA;YAAA;YAAA;UAAA,QACQ,eACZ,QAAC,SAAS;YAAA,wBACR,QAAC,KAAK;cAAC,GAAG,EAAC,YAAY;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAQ,eACpC,QAAC,KAAK;cACJ,EAAE,EAAC,YAAY;cACf,IAAI,EAAC,YAAY;cACjB,KAAK,EAAER,QAAQ,CAACS,UAAW;cAC3B,QAAQ,EAAGJ,CAAC,IACVJ,WAAW,CAAC;gBACV,GAAGD,QAAQ;gBACX,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;cAC5B,CAAC;YACF;cAAA;cAAA;cAAA;YAAA,QACD;UAAA;YAAA;YAAA;YAAA;UAAA,QACQ,eACZ,QAAC,SAAS;YAAA,wBACR,QAAC,KAAK;cAAC,GAAG,EAAC,QAAQ;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAQ,eAClC,QAAC,KAAK;cACJ,EAAE,EAAC,QAAQ;cACX,IAAI,EAAC,QAAQ;cACb,KAAK,EAAER,QAAQ,CAACU,MAAO;cACvB,QAAQ,EAAGL,CAAC,IACVJ,WAAW,CAAC;gBACV,GAAGD,QAAQ;gBACX,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;cAC5B,CAAC;YACF;cAAA;cAAA;cAAA;YAAA,QACD;UAAA;YAAA;YAAA;YAAA;UAAA,QACQ,eACZ,QAAC,SAAS;YAAA,wBACR,QAAC,KAAK;cAAC,GAAG,EAAC,OAAO;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ,eAChC,QAAC,KAAK;cACJ,EAAE,EAAC,OAAO;cACV,IAAI,EAAC,OAAO;cACZ,KAAK,EAAER,QAAQ,CAACW,KAAM;cACtB,QAAQ,EAAGN,CAAC,IACVJ,WAAW,CAAC;gBACV,GAAGD,QAAQ;gBACX,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;cAC5B,CAAC;YACF;cAAA;cAAA;cAAA;YAAA,QACD;UAAA;YAAA;YAAA;YAAA;UAAA,QACQ;QAAA;UAAA;UAAA;UAAA;QAAA;MACP;QAAA;QAAA;QAAA;MAAA,QAEV,eACD,QAAC,WAAW;QAAA,wBACV,QAAC,MAAM;UACL,KAAK,EAAC,SAAS;UACf,OAAO,EAAE,MAAM;YACbN,kBAAkB,EAAE;YACpBL,MAAM,EAAE;UACV,CAAE;UAAA,UACH;QAED;UAAA;UAAA;UAAA;QAAA,QAAS,EAAC,GAAG,eACb,QAAC,MAAM;UAAC,KAAK,EAAC,WAAW;UAAC,OAAO,EAAEA,MAAO;UAAA,UAAC;QAE3C;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAhGQH,gBAAgB;AAAA,KAAhBA,gBAAgB;AAkGzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}